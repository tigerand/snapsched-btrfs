#!/bin/bash


# list_sources lssnap print_config set_btrfspath mod_maxsnapcount set_dailies set_weeklies set_monthlies add_source remove_source diff

# kept in the library

# some array utilities

__is_in_array()
{
	#    if
	# maybe someday i'll update bash on bleys to something decent
	# local -n ARR=$2
	#    else
	local ARR
	eval ARR=(\"\${${2}[@]}\") # poor man's nameref functionality.
	#    fi
	local P

	P="$1"
	for I in "${ARR[@]}" ; do
		if [ "$P" = "$I" ] ; then
			return 0
		fi
	done
	return 1
}


_ssched_comp()
{
	local V
	local CMD_LST=`grep -A 1 -x '#command' /usr/local/lib/snapsched/snapsched-funcs | sed -e '/#command/d' -e '/--/d' -e 's/()//' -e 's/^ssched_//'`

	# the first argument is the command whose args are being completed
	# the second argument is the word being completed
	# the third argument is the word preceding the word being completed

#echo "$1 $2 $3 biteme" >/dev/stderr

	function list_srcs()
	{
		local -A CONFIG
		local S X

		. /etc/snapsched/config
		S=`for X in ${!CONFIG[*]} ; do
			expr $X \: SSRC_ >/dev/null || continue
			grep -qs '%' <<<$X && continue
			echo ${X#SSRC_}
			done`
		if [ "$1" ] ; then
			for X in $S ; do
				if expr "$X" \: "$1" >/dev/null ; then
					echo $X
				fi
			done
		else
			echo $S
		fi
	}

	# if the word to complete is the snapsched command
	if [ "$1" = "$3" ] ; then
		# if the word being completed is null, return command list
		# from the VOCATIONS array
		if [ -z "$2" ] ; then
			COMPREPLY=($CMD_LST)
			return
		fi

		# try to find a match to the partial word on the command line
		# to the words in the VOCATIONS array.  return all matches in COMREPLY
		for V in $CMD_LST ; do
			if expr match "$V" "$2" >/dev/null ; then
				COMPREPLY+="$V"
			fi
		done
		return
	elif grep -qw "$3" <<<"$CMD_LST" ; then
		# figure out what the next argument should be based on the command
		case "$3" in
			set_dailies|set_weeklies|set_monthlies|set_hourlies) ;&
			mod_maxsnapcount|remove_source|diff)
				COMPREPLY=(`list_srcs $2`)
				;;
			print_config)
				COMREPLY=(RETURN)
				;;
			list_sources)
				COMREPLY=("[-v]")
				;;
			lssnap)
				COMREPLY=("[`list_srcs`]")
				;;
			set_btrfspath)
				;;
			add_source)
				;;
		esac
		return 0
	fi
}

complete -F _ssched_comp snapsched

