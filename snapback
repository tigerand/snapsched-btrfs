#!/bin/bash

# program to perform backups
# called by cron.

export PRE=/usr/local

exec 2>&1

export OSILENT=

# load the library routines
. $PRE/lib/snapsched/snapsched-funcs

# first arg is snapshot source

NSRC="$1"
SSRC="$NSRC"
shift

# second arg is FREQ
FREQ=$1
shift

# third arg is hostname
BHOST=$1
shift

# validate NSRC arg, and read in config file
# no usage message, since this is called by cron.  supposedly.
_ssched_validate_nsrc SSRC "" ||
	exit 1

if [ "${CONFIG[SSRC_$NSRC%`_ssched_int2u $FREQ`_MSC]}" -eq 0 ] ; then
	# there's nothing to backup
	exit 0
fi

SSRC=${CONFIG[SNAP_MOUNT_DIR]}/$SSRC
BFSNAME=${CONFIG["SSRC_${NSRC}%BACKUPFS"]}


# don't spam email for hourlies
if [ "$FREQ" != hourly ] ; then
	OSILENT=
	:
else
	OSILENT=--quiet
	:
fi

omsg "$freq backup job for '$NSRC' at `date '+%F %T'`"


_ssched_mount_rootvol ${CONFIG[SNAP_MOUNT_DIR]} || {
	ES=$?
	serr "Unable to mount root volume '${CONFIG[SNAP_MOUNT_DIR]}': $ES"
	if [ ! -d "${CONFIG[SNAP_MOUNT_DIR]}" ] ; then
		serr "Directory  '${CONFIG[SNAP_MOUNT_DIR]}' does not exist."
	elif [ "$ES" -eq 4 ] ; then
		serr "Perhaps it needs to be configured in /etc/fstab?  Snapsched requires that."
	fi
	exit 1
}

TBASE="${CONFIG["SNAP_MOUNT_DIR"]}/${CONFIG["SNAP_BASE_DIR"]}/$NSRC/`_ssched_int2dir $FREQ`"

BSDIR=$BFSNAME/`hostname`/$NSRC/$FREQ

# make directories on bhost
ssh $BHOST mkdir -p /$BSDIR 2>/dev/null

# get the list of snaps for this nsrc/intval
LSLIST=`\ls $TBASE | tr '\n' ' '`

# get the list of backup snaps for this nsrc/intval
BSLIST=`ssh $BHOST \ls $BSDIR | tr '\n' ' '`

declare -a SNAP_XFER_LST
declare -i X=0 S

PREV_LS=

# create a list of snaps to send
for LSN in $LSLIST ; do
	BSN=${BSLIST%% *}
	BSLIST=${BSLIST#* }
	if [ "$BSLIST" -a \( "$BSLIST" = "$BSN" \) ] ; then
		BSLIST=
	fi
	# if local and backup snap exist, then nothing to do
	if [ "$LSN" = "$BSN" ] ; then
		PREV_LS="$LSN"
		continue
	fi

	# either BSN is empty, or BSN != LSN, which means we have to xfer a snap
	SNAP_XFER_LST[X++]="$PREV_LS"
	SNAP_XFER_LST[X++]="$LSN"
	PREV_LS="$LSN"
	# deal with "holes" by putting BSN back on the list
	if [ "$BSN" -a \( "$LSN" != "$BSN" \) ] ; then
		BSLIST="$BSN $BSLIST"
	fi
done

# send the snaps
for ((S = 0; S < X; S+=2)) ; do
	LS=$TBASE/${SNAP_XFER_LST[S]}
	echo "command:"
	echo "btrfs send ${SNAP_XFER_LST[S]:+ -p $LS} $TBASE/${SNAP_XFER_LST[S+1]} |"
	echo "    ssh $BHOST btrfs receive $BSDIR/"
	echo
	btrfs send ${SNAP_XFER_LST[S]:+ -p $LS} $TBASE/${SNAP_XFER_LST[S+1]} |
		ssh $BHOST btrfs receive $BSDIR/
	ES=$?
	echo
done


_ssched_umount_rootvol ${CONFIG[SNAP_MOUNT_DIR]}

exit $ES
